/*
 * build 0.4.2
 * 
 * CinematicIstrolid
 * by Vaxyyy
 * 
 * ---------------------------------------------
 *
 * press 'i' to turn CinematicIstrolid on and off.
 * 
 * ---------------------------------------------
 * 
 * ci.time
 *    number: default time in milliseconds.
 * 
 * ci.enabled
 *    true/false: code on or off.
 * 
 * ci.playerName
 *    name: default name.
 * 
 * ci.mode
 *    0: follows all ci.playerName units
 *    1: follows 1 units at a time.
 *    2: follows all units.
 * 
 * ci.resetTimer
 *    number: new time in milliseconds.
 * 
 * ci.newPlayerName
 *    name: new player name to follow.
 */
var ci = ci || {

    time: 3000, // 3sec
    enabled: false,
    playerName: commander.name.toLowerCase(),
    intv: null,
    mode: 2,
    oldWindow_body: window.body,
    oldBattlemode_onkeydown: battleMode.onkeydown,

    newPlayerName: function (newName) {
        let ref = newName.toLowerCase();
        ci.playerName = ref;
        ci.resetTimer(ci.time)
        return ci.playerName;
    },
    resetTimer: function (newTime) {
        ci.time = newTime
        clearInterval(ci.intv);
        ci.intv = setInterval(() => {
            if (ci.enabled) {
                battleMode.centerOnUnit = true;
                let owner = commander.number,
                    unitList = []
                    commander.selection = [];
                for (var p of intp.players) if (p.name.toLowerCase() === ci.playerName) owner = p.number;
                for (let i in intp.things) {
                    unit = intp.things[i];
                    if (unit.name === 'Unit' && !(unit.side === 'neutral' || unit.side === 'enemy')) {
                        if (ci.mode === 0) {
                            if (unit.owner === owner) {
                                commander.selection.push(unit);
                            }
                        } else if (ci.mode === 1) {
                            unitList.push(unit);
                        } else if (ci.mode === 2) {
                            commander.selection.push(unit);
                        }
                    }
                }
                if (ci.mode === 1) commander.selection.push(unitList[Math.floor(Math.random() * unitList.length)]);
                battleMode.zoom = 1.8;
            } else {
                battleMode.centerOnUnit = false;
                commander.selection = [];
                clearInterval(ci.intv);
            }
        }, ci.time);
        return ci.time;
    },
    drawBox: function () {
        if (ci.enabled && ui.mode === "battle") {

            eval(onecup["import"]());

            div(".hover-white-gray", () => {
                border_radius("15px");
                text_align("center");
                padding(20);
                margin(10);

                text("Cinematic Istrolid - by Vaxyyy");

                img({
                    src: 'https://mk0localeyesvidpssgk.kinstacdn.com/wp-content/uploads/2019/05/camera.png',
                    width: 32,
                    height: 32,
                });
            });
        }
    },
};


window.body = function () {
    ci.oldWindow_body.apply(this, arguments);
    ci.drawBox();
};

battleMode.onkeydown = e => {
    if (e.key === "i") {
        ci.resetTimer(ci.time)
        ci.enabled = !ci.enabled;
        ui.show = !ui.show;
        onecup.refresh();
    } else {
        return ci.oldBattlemode_onkeydown.call(this, e);
    }
};
