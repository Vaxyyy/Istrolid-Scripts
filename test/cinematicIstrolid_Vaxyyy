/*
 * build 0.3.1
 * 
 * CinematicIstrolid
 * by Vaxyyy
 *
 * ---------------------------------------------
 * 
 * ci.time
 *    number: default time in milliseconds.
 * 
 * ci.enabled
 *    true/false: code on or off.
 * 
 * ci.playerName
 *    name: default name.
 * 
 * ci.mode
 *    0: follows all ci.playerName units
 *    1: follows 1 units at a time.
 *    2: follows all units.
 * 
 * ci.resetTimer
 *    number: new time in milliseconds.
 * 
 * ci.newPlayerName
 *    name: new player name to follow.
 */
var ci = ci || {

    time: 3000, // 3sec
    enabled: true,
    playerName: commander.name.toLowerCase(),
    intv: null,
    mode: 2,

    newPlayerName: function (newName) {
        let ref = newName.toLowerCase();
        ci.playerName = ref;
        ci.resetTimer(ci.time)
        return ci.playerName;
    },
    resetTimer: function (newTime) {
        ci.time = newTime
        clearInterval(ci.intv);
        ci.intv = setInterval(() => {
            if (ci.enabled) {
                battleMode.centerOnUnit = true;
                let owner = commander.number,
                    unitList = [],
                    sel = commander.selection;
                sel = [];
                for (var p of intp.players) {
                    if (p.name.toLowerCase() !== ci.playerName) continue;
                    owner = p.number;
                }
                for (let i in intp.things) {
                    thing = intp.things[i];
                    if (thing.name === 'Unit' && !(thing.side === 'neutral' || thing.side === 'enemy')) {
                        if (ci.mode === 0) {
                            if (thing.owner === owner) {
                                sel.push(thing);
                            }
                        } 
                        else if (ci.mode === 1) {
                            unitList.push(thing);
                        }
                        else if (ci.mode === 2) {
                            sel.push(thing);
                        }
                    }
                }
                if (ci.mode === 1) sel.push(unitList[Math.floor(Math.random() * unitList.length)]);
                battleMode.zoom = sel.length / 10;
            } else {
                battleMode.centerOnUnit = false;
            }
        }, ci.time);
        return ci.time;
    }
};
